// Application Constants for SubScout\n\n// API Endpoints\nexport const API_ENDPOINTS = {\n  AUTH: {\n    USER: '/api/auth/user',\n    LOGOUT: '/api/auth/logout',\n  },\n  APPS: {\n    BASE: '/api/apps',\n    BY_ID: (id: string) => `/api/apps/${id}`,\n  },\n  SUBREDDITS: {\n    BASE: '/api/subreddits',\n    DISCOVER: '/api/subreddits/discover',\n    BY_ID: (id: string) => `/api/subreddits/${id}`,\n    BY_APP: (appId: string) => `/api/subreddits?appId=${appId}`,\n  },\n  POSTS: {\n    BASE: '/api/posts',\n    GENERATE: '/api/posts/generate',\n    BY_ID: (id: string) => `/api/posts/${id}`,\n  },\n  INSIGHTS: {\n    BASE: '/api/insights',\n    PAIN_POINTS: '/api/insights/pain-points',\n    TRENDS: '/api/insights/trends',\n  },\n  ACTIVITIES: {\n    BASE: '/api/activities',\n  },\n  STATS: {\n    BASE: '/api/stats',\n  },\n} as const;\n\n// UI Constants\nexport const UI = {\n  STALE_TIME: {\n    SHORT: 2 * 60 * 1000, // 2 minutes\n    MEDIUM: 5 * 60 * 1000, // 5 minutes  \n    LONG: 10 * 60 * 1000, // 10 minutes\n    VERY_LONG: 30 * 60 * 1000, // 30 minutes\n  },\n  DEBOUNCE_DELAY: 300,\n  PAGINATION: {\n    DEFAULT_PAGE_SIZE: 20,\n    MAX_PAGE_SIZE: 100,\n  },\n  TOAST_DURATION: 5000,\n} as const;\n\n// Business Logic Constants\nexport const BUSINESS = {\n  APP_ANALYSIS: {\n    MIN_URL_LENGTH: 10,\n    MAX_DESCRIPTION_LENGTH: 1000,\n  },\n  SUBREDDIT: {\n    MIN_NAME_LENGTH: 3,\n    MAX_NAME_LENGTH: 21,\n    MIN_SUBSCRIBERS: 100,\n  },\n  POST: {\n    MIN_TITLE_LENGTH: 10,\n    MAX_TITLE_LENGTH: 300,\n    MIN_CONTENT_LENGTH: 50,\n    MAX_CONTENT_LENGTH: 40000,\n  },\n  MATCH_SCORE: {\n    MIN: 0,\n    MAX: 100,\n    HIGH_THRESHOLD: 80,\n    MEDIUM_THRESHOLD: 60,\n  },\n} as const;\n\n// Status and Type Enums\nexport const POST_STATUS = {\n  DRAFT: 'draft',\n  APPROVED: 'approved', \n  PUBLISHED: 'published',\n} as const;\n\nexport const INSIGHT_TYPES = {\n  PAIN_POINT: 'pain_point',\n  FEATURE_REQUEST: 'feature_request',\n  TREND: 'trend',\n  GAP: 'gap',\n} as const;\n\nexport const ACTIVITY_TYPES = {\n  APP_CREATED: 'app_created',\n  APP_ANALYZED: 'app_analyzed',\n  SUBREDDIT_DISCOVERED: 'subreddit_discovered',\n  SUBREDDIT_MONITORED: 'subreddit_monitored',\n  POST_GENERATED: 'post_generated',\n  POST_PUBLISHED: 'post_published',\n  INSIGHT_EXTRACTED: 'insight_extracted',\n} as const;\n\nexport const PRIORITY_LEVELS = {\n  LOW: 'low',\n  MEDIUM: 'medium',\n  HIGH: 'high',\n} as const;\n\n// Validation Patterns\nexport const PATTERNS = {\n  URL: /^https?:\\/\\/.+/,\n  EMAIL: /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/,\n  SUBREDDIT_NAME: /^[A-Za-z0-9_]+$/,\n} as const;\n\n// Error Messages\nexport const ERROR_MESSAGES = {\n  NETWORK: 'Network error. Please check your connection.',\n  UNAUTHORIZED: 'You are not authorized to perform this action.',\n  NOT_FOUND: 'The requested resource was not found.',\n  SERVER_ERROR: 'An unexpected server error occurred.',\n  VALIDATION_FAILED: 'Please check your input and try again.',\n  RATE_LIMITED: 'Too many requests. Please try again later.',\n} as const;\n\n// Success Messages\nexport const SUCCESS_MESSAGES = {\n  APP_CREATED: 'App analyzed successfully!',\n  APP_UPDATED: 'App updated successfully!',\n  SUBREDDIT_DISCOVERED: 'Subreddits discovered successfully!',\n  SUBREDDIT_UPDATED: 'Subreddit settings updated!',\n  POST_GENERATED: 'Post generated successfully!',\n  POST_UPDATED: 'Post updated successfully!',\n  SETTINGS_SAVED: 'Settings saved successfully!',\n} as const;\n\n// Theme and Styling\nexport const THEME = {\n  COLORS: {\n    PRIMARY: 'hsl(221.2, 83.2%, 53.3%)', // blue-600\n    SECONDARY: 'hsl(210, 40%, 98%)', // slate-50\n    SUCCESS: 'hsl(142.1, 76.2%, 36.3%)', // green-600\n    WARNING: 'hsl(45.4, 93.4%, 47.5%)', // yellow-500\n    ERROR: 'hsl(0, 84.2%, 60.2%)', // red-500\n  },\n  BREAKPOINTS: {\n    SM: 640,\n    MD: 768,\n    LG: 1024,\n    XL: 1280,\n    '2XL': 1536,\n  },\n} as const;